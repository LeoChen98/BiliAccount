<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BiliAccount</name>
    </assembly>
    <members>
        <member name="T:BiliAccount.Account">
            <summary>
            账号信息模板
            </summary>
        </member>
        <member name="F:BiliAccount.Account.AccessToken">
            <summary>
            Access_Token（使用二维码登录时此项为空）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.CaptchaPic">
            <summary>
            验证码图片（仅当需要验证码验证时有值）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Cookies">
            <summary>
            Cookies集合实例
            </summary>
        </member>
        <member name="F:BiliAccount.Account.CsrfToken">
            <summary>
            csrf_token
            </summary>
        </member>
        <member name="F:BiliAccount.Account.EncryptedPassword">
            <summary>
            加密过的密码（使用二维码登录时此项为空）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Expires_AccessToken">
            <summary>
            Access_Token有效期（使用二维码登录时此项为空）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Expires_Cookies">
            <summary>
            Cookies有效期
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatus">
            <summary>
            指示是否登录成功
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Password">
            <summary>
            密码（使用二维码登录时此项为空）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.RefreshToken">
            <summary>
            Refresh_Token（使用二维码登录时此项为空）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.strCookies">
            <summary>
            Cookies字符串
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Tel">
            <summary>
            手机号（仅当需要手机验证的时候有值）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Uid">
            <summary>
            用户数字id
            </summary>
        </member>
        <member name="F:BiliAccount.Account.Url">
            <summary>
            手机验证链接（仅当需要手机验证的时候有值）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.UserName">
            <summary>
            用户名（使用二维码登录时此项为空）
            </summary>
        </member>
        <member name="T:BiliAccount.Account.LoginStatusEnum">
            <summary>
            登录状态枚举
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatusEnum.NeedTelVerify">
            <summary>
            手机验证(验证成功后重新登录）
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatusEnum.NeedCaptcha">
            <summary>
            图片验证码
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatusEnum.WrongPassword">
            <summary>
            密码错误
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatusEnum.None">
            <summary>
            未登录
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatusEnum.ByQrCode">
            <summary>
            二维码登录
            </summary>
        </member>
        <member name="F:BiliAccount.Account.LoginStatusEnum.ByPassword">
            <summary>
            密码登录
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByPassword">
            <summary>
            通过密码登录
            </summary>
        </member>
        <member name="P:BiliAccount.Core.ByPassword.Appkey">
            <summary>
            Appkey
            </summary>
        </member>
        <member name="P:BiliAccount.Core.ByPassword.Appsecret">
            <summary>
            AppSecret
            </summary>
        </member>
        <member name="P:BiliAccount.Core.ByPassword.Build">
            <summary>
            Build
            </summary>
        </member>
        <member name="P:BiliAccount.Core.ByPassword.User_Agent">
            <summary>
            UA
            </summary>
        </member>
        <member name="P:BiliAccount.Core.ByPassword.TimeStamp">
            <summary>
            Unix时间戳
            </summary>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.DoLogin(BiliAccount.Account@)">
            <summary>
            登录
            </summary>
            <param name="account">账号实例</param>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.DoLoginWithCatpcha(System.String,BiliAccount.Account@)">
            <summary>
            登录（带验证码）
            </summary>
            <param name="captcha">验证码字符</param>
            <param name="account">账号实例</param>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.GetCaptcha(BiliAccount.Account@)">
            <summary>
            获取验证码图片
            </summary>
            <param name="account">账号实例</param>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.EncryptPwd(System.String,System.String,System.String)">
            <summary>
            密码加密
            </summary>
            <param name="password">未加密密码</param>
            <param name="key">key</param>
            <param name="hash">hash</param>
            <returns>加密后密码</returns>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.GetKey(System.String@,System.String@,System.Net.CookieCollection@)">
            <summary>
            获取key
            </summary>
            <param name="hash">输出hash</param>
            <param name="key">输出key</param>
            <param name="cookies">输出cookies</param>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.Init">
            <summary>
            初始化登录模块
            </summary>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.IsTokenAvailable(System.String)">
            <summary>
            检查token可用性
            </summary>
            <param name="access_token">token</param>
            <returns>是否可用</returns>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.RefreshToken(System.String,System.String)">
            <summary>
            token续期
            </summary>
            <param name="access_token"></param>
            <param name="refresh_token"></param>
            <returns>到期时间</returns>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.SSO(System.String)">
            <summary>
            SSO
            </summary>
            <param name="access_token"></param>
            <returns>[0]=>(string)strCookies,[1]=>(string)csrf_token,[2]=>(DateTime)Expiress,[3]=>(CookieCollection)Cookies</returns>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.GetMD5(System.String)">
            <summary>
            获取文件md5
            </summary>
            <param name="str">文本</param>
            <returns>md5</returns>
        </member>
        <member name="M:BiliAccount.Core.ByPassword.GetSign(System.String)">
            <summary>
            获取参数签名
            </summary>
            <param name="strReq">请求参数</param>
            <returns>签名</returns>
        </member>
        <member name="T:BiliAccount.Core.ByPassword.DoLogin_DataTemplete">
            <summary>
            登录数据模板
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByPassword.GetKey_DataTemplete">
            <summary>
            GetKey返回值的数据模板
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByPassword.Init_DataTemplete">
            <summary>
            初始化数据模板
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByPassword.IsTokenAvailable_DataTemplete">
            <summary>
            检查token可用性数据模板
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByPassword.RefreshToken_DataTemplete">
            <summary>
            token续期数据模板
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByQrCode">
            <summary>
            通过二维码登录
            </summary>
        </member>
        <member name="F:BiliAccount.Core.ByQrCode.Monitor">
            <summary>
            状态监视器
            </summary>
        </member>
        <member name="F:BiliAccount.Core.ByQrCode.Refresher">
            <summary>
            刷新监视器
            </summary>
        </member>
        <member name="M:BiliAccount.Core.ByQrCode.GetQrcode">
            <summary>
            获取登陆二维码并显示
            </summary>
        </member>
        <member name="M:BiliAccount.Core.ByQrCode.CancelLogin">
            <summary>
            取消登录
            </summary>
        </member>
        <member name="M:BiliAccount.Core.ByQrCode.MonitorCallback(System.Object)">
            <summary>
            状态监视器回调
            </summary>
            <param name="o">oauthKey</param>
        </member>
        <member name="M:BiliAccount.Core.ByQrCode.RefresherCallback(System.Object)">
            <summary>
            刷新监视器回调
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:BiliAccount.Core.ByQrCode.GetQrcode_DataTemplete">
            <summary>
            获取二维码的数据模板
            </summary>
        </member>
        <member name="T:BiliAccount.Core.ByQrCode.MonitorCallBack_Templete">
            <summary>
            状态监视器回调数据模板
            </summary>
        </member>
        <member name="M:BiliAccount.String40Methods.IsNullOrWhiteSpace(System.String)">
            <summary>
            The IsNullOrWhiteSpace method from Framework4.0
            </summary>
            <returns>
              <c>true</c> if the <paramref name="value"/> is null or white space; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:BiliAccount.Http">
            <summary>
            HTTP封装类
            </summary>
        </member>
        <member name="M:BiliAccount.Http.GetBody(System.String,System.Net.CookieCollection,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            Get方法
            </summary>
            <param name="url">URL</param>
            <param name="cookie">cookies集合实例</param>
            <param name="referer">Referer</param>
            <param name="user_agent">User-agent</param>
            <param name="specialheaders">除前面之外的Headers</param>
            <returns>请求返回体</returns>
        </member>
        <member name="M:BiliAccount.Http.GetBodyOutCookies(System.String,System.Net.CookieCollection@,System.Net.CookieCollection,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            会返回cookies的Get方法
            </summary>
            <param name="url">URL</param>
            <param name="out_cookies">返回的cookies集合实例</param>
            <param name="cookie">cookies集合实例</param>
            <param name="referer">Referer</param>
            <param name="user_agent">User-agent</param>
            <param name="specialheaders">除前面之外的Headers</param>
            <returns>请求返回体</returns>
        </member>
        <member name="M:BiliAccount.Http.GetPicOutCookies(System.String,System.Net.CookieCollection@,System.Net.CookieCollection,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            会返回cookies的Get方法
            </summary>
            <param name="url">URL</param>
            <param name="out_cookies">返回的cookies集合实例</param>
            <param name="cookie">cookies集合实例</param>
            <param name="referer">Referer</param>
            <param name="user_agent">User-agent</param>
            <param name="specialheaders">除前面之外的Headers</param>
            <returns>请求返回体</returns>
        </member>
        <member name="M:BiliAccount.Http.PostBody(System.String,System.String,System.Net.CookieCollection,System.String,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            POST方法
            </summary>
            <param name="url">URL</param>
            <param name="data">要POST发送的文本</param>
            <param name="cookie">cookies集合实例</param>
            <param name="contenttype">数据类型</param>
            <param name="referer">Referer</param>
            <param name="user_agent">User-agent</param>
            <param name="specialheaders">除前面之外的Headers</param>
            <returns>请求返回体</returns>
        </member>
        <member name="M:BiliAccount.Http.PostBodyOutCookies(System.String,System.Net.CookieCollection@,System.String,System.Net.CookieCollection,System.String,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            返回cookies的POST方法
            </summary>
            <param name="url">URL</param>
            <param name="out_cookies">返回的cookies集合实例</param>
            <param name="data">要POST发送的文本</param>
            <param name="cookie">cookies集合实例</param>
            <param name="contenttype">数据类型</param>
            <param name="referer">Referer</param>
            <param name="user_agent">User-agent</param>
            <param name="specialheaders">除前面之外的Headers</param>
            <returns>请求返回体</returns>
        </member>
        <member name="M:BiliAccount.Http.Options(System.String,System.Net.CookieCollection,System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            OPTIONS方法
            </summary>
            <param name="url">URL</param>
            <param name="cookie">cookies集合实例</param>
            <param name="referer">Referer</param>
            <param name="user_agent">User-agent</param>
            <param name="specialheaders">除前面之外的Headers</param>
            <returns>请求返回体</returns>
        </member>
        <member name="T:BiliAccount.Linq.ByPassword">
            <summary>
            账号密码登录模式
            </summary>
        </member>
        <member name="M:BiliAccount.Linq.ByPassword.IsTokenAvailable(System.String)">
            <summary>
            检查token可用性
            </summary>
            <param name="access_token">token</param>
            <returns>是否可用</returns>
        </member>
        <member name="M:BiliAccount.Linq.ByPassword.LoginByPassword(System.String,System.String)">
            <summary>
            用账号密码登录
            </summary>
            <param name="username">用户名（邮箱/手机）</param>
            <param name="password">密码（明文）</param>
            <returns>账号信息实例</returns>
        </member>
        <member name="M:BiliAccount.Linq.ByPassword.LoginByPasswordWithCaptcha(System.String,BiliAccount.Account@)">
            <summary>
            带验证码的账号密码登录
            </summary>
            <param name="Captcha">验证码</param>
            <param name="account">账号信息实例</param>
        </member>
        <member name="M:BiliAccount.Linq.ByPassword.RefreshToken(System.String,System.String)">
            <summary>
            token续期
            </summary>
            <param name="access_token"></param>
            <param name="refresh_token"></param>
            <returns>到期时间</returns>
        </member>
        <member name="M:BiliAccount.Linq.ByPassword.SSO(System.String)">
            <summary>
            SSO
            </summary>
            <param name="access_token"></param>
            <returns>[0]=>(string)strCookies,[1]=>(string)csrf_token,[2]=>(DateTime)Expiress,[3]=>(CookieCollection)Cookies</returns>
        </member>
        <member name="T:BiliAccount.Linq.ByQRCode">
            <summary>
            二维码登录
            </summary>
        </member>
        <member name="T:BiliAccount.Linq.ByQRCode.QrCodeRefresh_Handle">
            <summary>
            二维码刷新处理程序
            </summary>
            <param name="newQrCode">新二维码</param>
        </member>
        <member name="T:BiliAccount.Linq.ByQRCode.QrCodeStatus_Changed_Handle">
            <summary>
            二维码登录状态变更处理程序
            </summary>
            <param name="status">二维码状态</param>
            <param name="account">登录成功时有值，账号信息实例</param>
        </member>
        <member name="E:BiliAccount.Linq.ByQRCode.QrCodeRefresh">
            <summary>
            二维码刷新事件
            </summary>
        </member>
        <member name="E:BiliAccount.Linq.ByQRCode.QrCodeStatus_Changed">
            <summary>
            二维码登录状态变更事件
            </summary>
        </member>
        <member name="T:BiliAccount.Linq.ByQRCode.QrCodeStatus">
            <summary>
            二维码登录状态枚举
            </summary>
        </member>
        <member name="F:BiliAccount.Linq.ByQRCode.QrCodeStatus.Wating">
            <summary>
            等待扫描
            </summary>
        </member>
        <member name="F:BiliAccount.Linq.ByQRCode.QrCodeStatus.Scaned">
            <summary>
            等待确认
            </summary>
        </member>
        <member name="F:BiliAccount.Linq.ByQRCode.QrCodeStatus.Success">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="M:BiliAccount.Linq.ByQRCode.CancelLogin">
            <summary>
            取消登录
            </summary>
        </member>
        <member name="M:BiliAccount.Linq.ByQRCode.LoginByQrCode">
            <summary>
            用二维码登录
            </summary>
            <returns>二维码图片实例</returns>
        </member>
        <member name="M:BiliAccount.Linq.ByQRCode.RaiseQrCodeRefresh(System.Drawing.Bitmap)">
            <summary>
            调起二维码刷新
            </summary>
            <param name="newQrCode">新二维码</param>
        </member>
        <member name="M:BiliAccount.Linq.ByQRCode.RaiseQrCodeStatus_Changed(BiliAccount.Linq.ByQRCode.QrCodeStatus,BiliAccount.Account)">
            <summary>
            调起二维码登录状态变更
            </summary>
            <param name="status">二维码状态</param>
            <param name="account">登录成功时有值，账号信息实例</param>
        </member>
        <member name="T:BiliAccount.RSA">
            <summary>
            RSA工具类
            </summary>
        </member>
        <member name="M:BiliAccount.RSA.Decrypt(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[])">
            <summary>
            RSA解密. 当数据较长时, 能自动分段解密.
            </summary>
            <param name="rsa">加解密服务提供者. 需是已初始化的.</param>
            <param name="data">欲解密的数据.</param>
            <returns>返回解密后的数据.</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">On RSACryptoServiceProvider.Encrypt .</exception>
        </member>
        <member name="M:BiliAccount.RSA.Encrypt(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[])">
            <summary>
            RSA加密. 当数据较长时, 能自动分段加密.
            </summary>
            <param name="rsa">加解密服务提供者. 需是已初始化的.</param>
            <param name="data">欲加密的数据.</param>
            <returns>返回加密后的数据.</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">On RSACryptoServiceProvider.Encrypt .</exception>
        </member>
        <member name="M:BiliAccount.RSA.PemDecodePkcs8PrivateKey(System.Byte[])">
            <summary>
            解码 PKCS#8 编码的私钥，获取私钥的RSA加解密对象.
            </summary>
            <param name="pkcs8">私钥数据。</param>
            <returns>返回私钥的RSA加解密对象. 失败时返回null.</returns>
        </member>
        <member name="M:BiliAccount.RSA.PemDecodePublicKey(System.Byte[])">
            <summary>
            根据PEM纯密钥数据，获取公钥的RSA加解密对象.
            </summary>
            <param name="pubcdata">公钥数据</param>
            <returns>返回公钥的RSA加解密对象.</returns>
        </member>
        <member name="M:BiliAccount.RSA.PemDecodeX509PrivateKey(System.Byte[])">
            <summary>
            解码 X.509 编码的私钥，获取私钥的RSA加解密对象.
            </summary>
            <param name="privkey">私钥数据。</param>
            <returns>返回私钥的RSA加解密对象. 失败时返回null.</returns>
        </member>
        <member name="M:BiliAccount.RSA.PemUnpack(System.String,System.String@,System.Char@)">
            <summary>
            PEM解包.
            </summary>
            <para>从PEM密钥数据中解包得到纯密钥数据. 即去掉BEGIN/END行，并作BASE64解码. 若没有BEGIN/END, 则直接做BASE64解码.</para>
            <param name="data">源数据.</param>
            <param name="purposetext">用途文本. 如返回“BEGIN PUBLIC KEY”中的“PUBLIC KEY”.</param>
            <param name="purposecode">用途代码. R私钥， U公钥. 若无法识别，便保持原值.</param>
            <returns>返回解包后的纯密钥数据.</returns>
            <exception cref="T:System.ArgumentNullException">data is empty, or data body is empty.</exception>
            <exception cref="T:System.FormatException">data body is not BASE64.</exception>
        </member>
        <member name="M:BiliAccount.RSA.GetIntegerSize(System.IO.BinaryReader)">
            <summary>
            取得整数大小.
            </summary>
            <param name="binr">BinaryReader</param>
            <returns>返回整数大小.</returns>
        </member>
        <member name="M:BiliAccount.RSA.ReadASNLength(System.IO.BinaryReader)">
            <summary>
            Read ASN Length.
            </summary>
            <param name="reader">reader</param>
            <returns>Return ASN Length.</returns>
        </member>
        <member name="M:BiliAccount.RSA.SequenceEqualByte(System.Byte[],System.Byte[])">
            <summary>
            字节数组内容是否相等.
            </summary>
            <param name="a">数组a</param>
            <param name="b">数组b</param>
            <returns>返回是否相等.</returns>
        </member>
    </members>
</doc>
